---
source: src/parser.tests.rs
expression: ast
---
Ok(
    Span {
        offset: 0..11,
        pos: Pos {
            line: 0,
            col: 0,
        }..Pos {
            line: 0,
            col: 11,
        },
        node: PropAccess {
            obj: Span {
                offset: 0..6,
                pos: Pos {
                    line: 0,
                    col: 0,
                }..Pos {
                    line: 0,
                    col: 6,
                },
                node: FuncCall {
                    callee: Span {
                        offset: 0..4,
                        pos: Pos {
                            line: 0,
                            col: 0,
                        }..Pos {
                            line: 0,
                            col: 4,
                        },
                        node: Var {
                            name: "func",
                        },
                    },
                    paren_l: Token {
                        sigil: ParenL,
                        offset: 4..5,
                        pos: Pos {
                            line: 0,
                            col: 4,
                        }..Pos {
                            line: 0,
                            col: 5,
                        },
                    },
                    args: [],
                    paren_r: Token {
                        sigil: ParenR,
                        offset: 5..6,
                        pos: Pos {
                            line: 0,
                            col: 5,
                        }..Pos {
                            line: 0,
                            col: 6,
                        },
                    },
                },
            },
            dot_tok: Token {
                sigil: Dot,
                offset: 6..7,
                pos: Pos {
                    line: 0,
                    col: 6,
                }..Pos {
                    line: 0,
                    col: 7,
                },
            },
            prop: "prop",
        },
    },
)
